// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: function.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// multiple report events
type EventDataSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportEvents []*Event `protobuf:"bytes,1,rep,name=ReportEvents,proto3" json:"ReportEvents,omitempty"`
}

func (x *EventDataSet) Reset() {
	*x = EventDataSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_function_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDataSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDataSet) ProtoMessage() {}

func (x *EventDataSet) ProtoReflect() protoreflect.Message {
	mi := &file_function_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDataSet.ProtoReflect.Descriptor instead.
func (*EventDataSet) Descriptor() ([]byte, []int) {
	return file_function_proto_rawDescGZIP(), []int{0}
}

func (x *EventDataSet) GetReportEvents() []*Event {
	if x != nil {
		return x.ReportEvents
	}
	return nil
}

type Properties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datatype   DataType `protobuf:"varint,1,opt,name=datatype,proto3,enum=driverplugin.DataType" json:"datatype,omitempty"`
	Properties []string `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *Properties) Reset() {
	*x = Properties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_function_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Properties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Properties) ProtoMessage() {}

func (x *Properties) ProtoReflect() protoreflect.Message {
	mi := &file_function_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Properties.ProtoReflect.Descriptor instead.
func (*Properties) Descriptor() ([]byte, []int) {
	return file_function_proto_rawDescGZIP(), []int{1}
}

func (x *Properties) GetDatatype() DataType {
	if x != nil {
		return x.Datatype
	}
	return DataType_Int8
}

func (x *Properties) GetProperties() []string {
	if x != nil {
		return x.Properties
	}
	return nil
}

type DeviceDataSetItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceID string `protobuf:"bytes,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	// key can be module.property or single property
	Properties map[string]*Properties `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DeviceDataSetItem) Reset() {
	*x = DeviceDataSetItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_function_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceDataSetItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceDataSetItem) ProtoMessage() {}

func (x *DeviceDataSetItem) ProtoReflect() protoreflect.Message {
	mi := &file_function_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceDataSetItem.ProtoReflect.Descriptor instead.
func (*DeviceDataSetItem) Descriptor() ([]byte, []int) {
	return file_function_proto_rawDescGZIP(), []int{2}
}

func (x *DeviceDataSetItem) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *DeviceDataSetItem) GetProperties() map[string]*Properties {
	if x != nil {
		return x.Properties
	}
	return nil
}

// history device data
type DeviceDataSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*DeviceDataSetItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *DeviceDataSet) Reset() {
	*x = DeviceDataSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_function_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceDataSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceDataSet) ProtoMessage() {}

func (x *DeviceDataSet) ProtoReflect() protoreflect.Message {
	mi := &file_function_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceDataSet.ProtoReflect.Descriptor instead.
func (*DeviceDataSet) Descriptor() ([]byte, []int) {
	return file_function_proto_rawDescGZIP(), []int{3}
}

func (x *DeviceDataSet) GetItems() []*DeviceDataSetItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// dataset is the data running in the ruleengine
// there are three types of dataset, device dataset, event dataset and raw data
// device dataset contains the device data from devices, such as modbus device, opc device and other devices
// event dataset contains events reported from devices
// raw dataset is a byte array
type DataSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to DataSet:
	//	*DataSet_DeviceDataSet
	//	*DataSet_EventDataSet
	//	*DataSet_RawDataSet
	DataSet   isDataSet_DataSet `protobuf_oneof:"DataSet"`
	Timestamp int64             `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// if ok is equals true, this data set is valid, otherwise,
	// this data isn't valid and error message is set to filed 'errorMessage'
	Ok           bool   `protobuf:"varint,5,opt,name=ok,proto3" json:"ok,omitempty"`
	ErrorMessage string `protobuf:"bytes,6,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
}

func (x *DataSet) Reset() {
	*x = DataSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_function_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSet) ProtoMessage() {}

func (x *DataSet) ProtoReflect() protoreflect.Message {
	mi := &file_function_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSet.ProtoReflect.Descriptor instead.
func (*DataSet) Descriptor() ([]byte, []int) {
	return file_function_proto_rawDescGZIP(), []int{4}
}

func (m *DataSet) GetDataSet() isDataSet_DataSet {
	if m != nil {
		return m.DataSet
	}
	return nil
}

func (x *DataSet) GetDeviceDataSet() *DeviceDataSet {
	if x, ok := x.GetDataSet().(*DataSet_DeviceDataSet); ok {
		return x.DeviceDataSet
	}
	return nil
}

func (x *DataSet) GetEventDataSet() *EventDataSet {
	if x, ok := x.GetDataSet().(*DataSet_EventDataSet); ok {
		return x.EventDataSet
	}
	return nil
}

func (x *DataSet) GetRawDataSet() []byte {
	if x, ok := x.GetDataSet().(*DataSet_RawDataSet); ok {
		return x.RawDataSet
	}
	return nil
}

func (x *DataSet) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DataSet) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *DataSet) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type isDataSet_DataSet interface {
	isDataSet_DataSet()
}

type DataSet_DeviceDataSet struct {
	DeviceDataSet *DeviceDataSet `protobuf:"bytes,1,opt,name=deviceDataSet,proto3,oneof"`
}

type DataSet_EventDataSet struct {
	EventDataSet *EventDataSet `protobuf:"bytes,2,opt,name=eventDataSet,proto3,oneof"`
}

type DataSet_RawDataSet struct {
	RawDataSet []byte `protobuf:"bytes,3,opt,name=rawDataSet,proto3,oneof"`
}

func (*DataSet_DeviceDataSet) isDataSet_DataSet() {}

func (*DataSet_EventDataSet) isDataSet_DataSet() {}

func (*DataSet_RawDataSet) isDataSet_DataSet() {}

// Conditions for filtering historical data
type ObjectCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectID  string   `protobuf:"bytes,1,opt,name=objectID,proto3" json:"objectID,omitempty"`
	Property  []string `protobuf:"bytes,2,rep,name=property,proto3" json:"property,omitempty"`
	Aggregate string   `protobuf:"bytes,3,opt,name=aggregate,proto3" json:"aggregate,omitempty"`
	RawSQL    string   `protobuf:"bytes,4,opt,name=rawSQL,proto3" json:"rawSQL,omitempty"`
}

func (x *ObjectCondition) Reset() {
	*x = ObjectCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_function_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectCondition) ProtoMessage() {}

func (x *ObjectCondition) ProtoReflect() protoreflect.Message {
	mi := &file_function_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectCondition.ProtoReflect.Descriptor instead.
func (*ObjectCondition) Descriptor() ([]byte, []int) {
	return file_function_proto_rawDescGZIP(), []int{5}
}

func (x *ObjectCondition) GetObjectID() string {
	if x != nil {
		return x.ObjectID
	}
	return ""
}

func (x *ObjectCondition) GetProperty() []string {
	if x != nil {
		return x.Property
	}
	return nil
}

func (x *ObjectCondition) GetAggregate() string {
	if x != nil {
		return x.Aggregate
	}
	return ""
}

func (x *ObjectCondition) GetRawSQL() string {
	if x != nil {
		return x.RawSQL
	}
	return ""
}

type GeneratorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start            int64              `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End              int64              `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	Interval         int64              `protobuf:"varint,3,opt,name=interval,proto3" json:"interval,omitempty"`
	ObjectConditions []*ObjectCondition `protobuf:"bytes,4,rep,name=objectConditions,proto3" json:"objectConditions,omitempty"`
}

func (x *GeneratorRequest) Reset() {
	*x = GeneratorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_function_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratorRequest) ProtoMessage() {}

func (x *GeneratorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_function_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratorRequest.ProtoReflect.Descriptor instead.
func (*GeneratorRequest) Descriptor() ([]byte, []int) {
	return file_function_proto_rawDescGZIP(), []int{6}
}

func (x *GeneratorRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GeneratorRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *GeneratorRequest) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *GeneratorRequest) GetObjectConditions() []*ObjectCondition {
	if x != nil {
		return x.ObjectConditions
	}
	return nil
}

var File_function_proto protoreflect.FileDescriptor

var file_function_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0c, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x1a, 0x12,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x47, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x65, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x60, 0x0a, 0x0a, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0xd9, 0x01,
	0x0a, 0x11, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12,
	0x4f, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x1a, 0x57, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x46, 0x0a, 0x0d, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x8f, 0x02, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x12, 0x43, 0x0a,
	0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65,
	0x74, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x65, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0a, 0x72, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x61, 0x77, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x02, 0x6f, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x65, 0x74, 0x22, 0x7f, 0x0a, 0x0f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x61, 0x77, 0x53, 0x51, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61,
	0x77, 0x53, 0x51, 0x4c, 0x22, 0xa1, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x49, 0x0a,
	0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0x9d, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x44, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1e, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0d,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x2e,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x65, 0x74, 0x22, 0x00, 0x30, 0x01, 0x32, 0x97, 0x01, 0x0a, 0x09, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x6e, 0x63, 0x65, 0x12, 0x15, 0x2e, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74,
	0x1a, 0x15, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x11, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x15,
	0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x65, 0x74, 0x1a, 0x15, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x22, 0x00, 0x28, 0x01,
	0x30, 0x01, 0x42, 0x12, 0x5a, 0x10, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_function_proto_rawDescOnce sync.Once
	file_function_proto_rawDescData = file_function_proto_rawDesc
)

func file_function_proto_rawDescGZIP() []byte {
	file_function_proto_rawDescOnce.Do(func() {
		file_function_proto_rawDescData = protoimpl.X.CompressGZIP(file_function_proto_rawDescData)
	})
	return file_function_proto_rawDescData
}

var file_function_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_function_proto_goTypes = []interface{}{
	(*EventDataSet)(nil),      // 0: driverplugin.EventDataSet
	(*Properties)(nil),        // 1: driverplugin.Properties
	(*DeviceDataSetItem)(nil), // 2: driverplugin.DeviceDataSetItem
	(*DeviceDataSet)(nil),     // 3: driverplugin.DeviceDataSet
	(*DataSet)(nil),           // 4: driverplugin.DataSet
	(*ObjectCondition)(nil),   // 5: driverplugin.ObjectCondition
	(*GeneratorRequest)(nil),  // 6: driverplugin.GeneratorRequest
	nil,                       // 7: driverplugin.DeviceDataSetItem.PropertiesEntry
	(*Event)(nil),             // 8: driverplugin.Event
	(DataType)(0),             // 9: driverplugin.DataType
}
var file_function_proto_depIdxs = []int32{
	8,  // 0: driverplugin.EventDataSet.ReportEvents:type_name -> driverplugin.Event
	9,  // 1: driverplugin.Properties.datatype:type_name -> driverplugin.DataType
	7,  // 2: driverplugin.DeviceDataSetItem.properties:type_name -> driverplugin.DeviceDataSetItem.PropertiesEntry
	2,  // 3: driverplugin.DeviceDataSet.items:type_name -> driverplugin.DeviceDataSetItem
	3,  // 4: driverplugin.DataSet.deviceDataSet:type_name -> driverplugin.DeviceDataSet
	0,  // 5: driverplugin.DataSet.eventDataSet:type_name -> driverplugin.EventDataSet
	5,  // 6: driverplugin.GeneratorRequest.objectConditions:type_name -> driverplugin.ObjectCondition
	1,  // 7: driverplugin.DeviceDataSetItem.PropertiesEntry.value:type_name -> driverplugin.Properties
	6,  // 8: driverplugin.Generator.QueryData:input_type -> driverplugin.GeneratorRequest
	6,  // 9: driverplugin.Generator.SubscribeData:input_type -> driverplugin.GeneratorRequest
	4,  // 10: driverplugin.Processor.ProcessDataOnce:input_type -> driverplugin.DataSet
	4,  // 11: driverplugin.Processor.ProcessDataStream:input_type -> driverplugin.DataSet
	4,  // 12: driverplugin.Generator.QueryData:output_type -> driverplugin.DataSet
	4,  // 13: driverplugin.Generator.SubscribeData:output_type -> driverplugin.DataSet
	4,  // 14: driverplugin.Processor.ProcessDataOnce:output_type -> driverplugin.DataSet
	4,  // 15: driverplugin.Processor.ProcessDataStream:output_type -> driverplugin.DataSet
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_function_proto_init() }
func file_function_proto_init() {
	if File_function_proto != nil {
		return
	}
	file_driverplugin_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_function_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDataSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_function_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Properties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_function_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceDataSetItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_function_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceDataSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_function_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_function_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_function_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_function_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*DataSet_DeviceDataSet)(nil),
		(*DataSet_EventDataSet)(nil),
		(*DataSet_RawDataSet)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_function_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_function_proto_goTypes,
		DependencyIndexes: file_function_proto_depIdxs,
		MessageInfos:      file_function_proto_msgTypes,
	}.Build()
	File_function_proto = out.File
	file_function_proto_rawDesc = nil
	file_function_proto_goTypes = nil
	file_function_proto_depIdxs = nil
}
